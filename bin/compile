#!/bin/sh

set -e

BUILD_DIR=$1
CACHE_DIR=$2

# config
VERSION="2.9.9"

# Buildpack URL
LIB_NAME=libxml2
TAG_NAME=${LIB_NAME}-${VERSION}
ARCHIVE_NAME=${TAG_NAME}-x86_64
FILE_NAME=${ARCHIVE_NAME}.tar.bz2
BUILDPACK_LIBXML2_PACKAGE=https://github.com/mcolyer/heroku-buildpack-libxml2/releases/download/${TAG_NAME}/${FILE_NAME}

mkdir -p $CACHE_DIR
if ! [ -e $CACHE_DIR/$FILE_NAME ]; then
  echo "-----> Fetching libxml2 ${VERSION} binaries at ${BUILDPACK_LIBXML2_PACKAGE}"
  curl $BUILDPACK_LIBXML2_PACKAGE -L -s -o $CACHE_DIR/$FILE_NAME
fi

echo "-----> Extracting libxml2 ${VERSION} binaries to ${BUILD_DIR}/vendor/libxml2"
mkdir -p $CACHE_DIR/$ARCHIVE_NAME
mkdir -p $BUILD_DIR/vendor
tar jxf $CACHE_DIR/$FILE_NAME -C $CACHE_DIR
mv $CACHE_DIR/${LIB_NAME} $BUILD_DIR/vendor/${LIB_NAME}

# Attempt to sneak a copy of libxml into a path thats required by
# nokogiri's build process before the system library.
#
# Unfortunately this doesn't work and I don't understand why.
mkdir -p $BUILD_DIR/vendor/ruby-2.1.0/lib/
cp -r $BUILD_DIR/vendor/${LIB_NAME}/lib/* $BUILD_DIR/vendor/ruby-2.1.0/lib/
ls -al $BUILD_DIR/vendor/ruby-2.1.0/lib/

# Enable the use of bundler configuration for building gems.
#
# Taken from https://gist.github.com/perplexes/5357663
if [ -d $BUILD_DIR/.heroku_bundle ]; then
  rm -rf $CACHE_DIR/.bundle
  cp -R $BUILD_DIR/.heroku_bundle $BUILD_DIR/.bundle
fi

echo "-----> Writing profile script"
mkdir -p $BUILD_DIR/.profile.d
cat <<EOF >$BUILD_DIR/.profile.d/000_libxml2.sh
export PATH="\$HOME/vendor/libxml2/bin:$PATH"
export LD_LIBRARY_PATH="\$HOME/vendor/libxml2/lib:\$LD_LIBRARY_PATH"
export LD_PRELOAD="\$HOME/vendor/libxml2/lib/libxml2.so:\$LD_PRELOAD"
EOF
